import React from "react";
import Header from "../components/Header";
import Layout from "../components/Layout";
import { useState } from "react";
import Cookie from "js-cookie";
import { parseCookies } from "../lib/parseCookies";
import Head from "next/head";

function renderFormPage(formPage) {
  switch (formPage) {

    case 0:
      return (
        <>
          <label htmlFor="name">
            Name
            <span aria-hidden="true">*</span>
          </label>
          <input id="name" name="name" type="text" required />
          <label htmlFor="email">
            Email address
            <span aria-hidden="true">*</span>
          </label>
          <input id="email" name="email" type="email" required />
        </>
      );

    case 1:
      return (
        <>
        <label htmlFor="password">
        Gender
        <span aria-hidden="true">*</span>
      </label>
      <input
        id="gender"
        name="gender"
        type="gender"
        aria-describedby="genderedRequirements"
        required
      />
      </>
      );

    case 2:
      return (
        <>
        <label htmlFor="password">
        Who would you like to connect with?
        <span aria-hidden="true">*</span>
      </label>
      <input
        id="genderPreference"
        name="genderPreference"
        type="genderPreference"
        aria-describedby="genderPreference"
        required
      />
      </>
      );

      case 3:
        return (
          <>
          <label htmlFor="password">
          What languages do you speak?
          <span aria-hidden="true">*</span>
        </label>
        <input
          id="genderPreference"
          name="genderPreference"
          type="genderPreference"
          aria-describedby="genderPreference"
          required
        />
        </>
        );

        case 4:
          return (
            <>
            <label htmlFor="password">
            What languages do you want to learn?
            <span aria-hidden="true">*</span>
          </label>
          <input
            id="genderPreference"
            name="genderPreference"
            type="genderPreference"
            aria-describedby="genderPreference"
            required
          />
          </>
          );

          case 4:
            return (
              <>
              <label htmlFor="password">
              I agree to be kind
              <span aria-hidden="true">*</span>
            </label>
            <input
              id="genderPreference"
              name="genderPreference"
              type="genderPreference"
              aria-describedby="genderPreference"
              required
            />
            </>
            );

    default:
      break;
  }
}

export default function Signup(props) {
  const [getPageNum, setPageNum] = useState(0);

  const incrementPage = (e) => {
    e.preventDefault();
    setPageNum((currentPage) => currentPage + 1);
    return;
  };
  const decrementPage = (e) => {
    e.preventDefault();
    setPageNum((currentPage) => currentPage - 1);
    return;
  };
  return (
    <Layout>
      <div>
        <Head>
          <title>Title</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <h1> Sign Up</h1>
        <form>
          <h2>Page {getPageNum + 1} of x</h2>
          {renderFormPage(getPageNum)}
          <button onClick={decrementPage}>Previous</button>
          <button onClick={incrementPage}>Next</button>
        </form>
        {/* <div>
          <h1>Sign up</h1>
          <form action="" method="POST">



            <button type="submit">
              submit
            </button>
          </form>
        </div> */}
      </div>
    </Layout>
  );
}

Signup.getInitialProps = ({ req }) => {
  const cookies = parseCookies(req);

  return {
    initialRememberValue: cookies.rememberMe,
  };
};

//     <>
//       <Head>
//         <title>Title</title>
//         <meta name="description" content="Generated by create next app" />
//       </Head>
//       <Header />
//       <Layout>
//         <form>
//           username
//           <input
//             type="text"
//             name="usernameInput"
//             onKeyUp={(e) => setUsername(e.target.value)}
//           />
//           <button type="submit" onClick={() => updateCookie()}>
//             submit
//           </button>
//         </form>
//       </Layout>
//     </>
//   );
// };

// Signup.getInitialProps = ({ req }) => {
//   const cookies = parseCookies(req);

//   return {
//     initialValue: cookies
//   };
// };
